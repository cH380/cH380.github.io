import{_ as s,o as a,c as n,a as l}from"./app.427d583d.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"一.Float32Array","slug":"一-float32array","link":"#一-float32array","children":[{"level":3,"title":"1.什么是Float32Array？","slug":"_1-什么是float32array","link":"#_1-什么是float32array","children":[]}]},{"level":2,"title":"1.1 固定长度","slug":"_1-1-固定长度","link":"#_1-1-固定长度","children":[]},{"level":2,"title":"1.2 只能存储浮点类型数据","slug":"_1-2-只能存储浮点类型数据","link":"#_1-2-只能存储浮点类型数据","children":[]},{"level":2,"title":"2.基本用法","slug":"_2-基本用法","link":"#_2-基本用法","children":[]},{"level":2,"title":"2.1创建类型数组","slug":"_2-1创建类型数组","link":"#_2-1创建类型数组","children":[]},{"level":2,"title":"（1）长度作为参数创建","slug":"_1-长度作为参数创建","link":"#_1-长度作为参数创建","children":[]},{"level":2,"title":"（2） 普通数组作为参数创建","slug":"_2-普通数组作为参数创建","link":"#_2-普通数组作为参数创建","children":[]},{"level":2,"title":"（3）  类型数组作为参数创建","slug":"_3-类型数组作为参数创建","link":"#_3-类型数组作为参数创建","children":[]},{"level":2,"title":"二.WeakMap （弱映射）","slug":"二-weakmap-弱映射","link":"#二-weakmap-弱映射","children":[]},{"level":2,"title":"三. WeakSet","slug":"三-weakset","link":"#三-weakset","children":[{"level":3,"title":"1.weakset的属性和方法","slug":"_1-weakset的属性和方法","link":"#_1-weakset的属性和方法","children":[]},{"level":3,"title":"2.Weak的弱引用","slug":"_2-weak的弱引用","link":"#_2-weak的弱引用","children":[]}]}],"relativePath":"content/js/j1.md"}'),p={name:"content/js/j1.md"},o=l(`<h2 id="一-float32array" tabindex="-1">一.Float32Array <a class="header-anchor" href="#一-float32array" aria-hidden="true">#</a></h2><h3 id="_1-什么是float32array" tabindex="-1">1.什么是Float32Array？ <a class="header-anchor" href="#_1-什么是float32array" aria-hidden="true">#</a></h3><div class="language-Markdown"><button title="Copy Code" class="copy"></button><span class="lang">Markdown</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">在MDN中的描述是：一个固定长度，用来储存浮点类型数据的数组</span></span>
<span class="line"></span></code></pre></div><h2 id="_1-1-固定长度" tabindex="-1">1.1 固定长度 <a class="header-anchor" href="#_1-1-固定长度" aria-hidden="true">#</a></h2><p>为什么说是固定长度？请看下方示例</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Float32Array</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">f1 </span><span style="color:#676E95;font-style:italic;">// [0, 1]</span></span>
<span class="line"></span></code></pre></div><p>从上面示例可以看出，创建了一个长度为2的类型数组，然后通过索引复制3个值，最后发现只有两个元素。也就是说类型数组Float32Array和普通数组Array不一样，不能像Array一样五线2添加元素。</p><h2 id="_1-2-只能存储浮点类型数据" tabindex="-1">1.2 只能存储浮点类型数据 <a class="header-anchor" href="#_1-2-只能存储浮点类型数据" aria-hidden="true">#</a></h2><p>为什么只能存储浮点类型数据，我们通过下方示例来验证</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Float32Array</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">f</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">f </span><span style="color:#676E95;font-style:italic;">// [0, NaN, 2]</span></span>
<span class="line"></span></code></pre></div><p>通过上方的示例我们可以看到，我们只能添加number类型的数据，其他其它类型的数据会变成NaN</p><h2 id="_2-基本用法" tabindex="-1">2.基本用法 <a class="header-anchor" href="#_2-基本用法" aria-hidden="true">#</a></h2><h2 id="_2-1创建类型数组" tabindex="-1">2.1创建类型数组 <a class="header-anchor" href="#_2-1创建类型数组" aria-hidden="true">#</a></h2><h2 id="_1-长度作为参数创建" tabindex="-1">（1）长度作为参数创建 <a class="header-anchor" href="#_1-长度作为参数创建" aria-hidden="true">#</a></h2><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Float32Array</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">f </span><span style="color:#676E95;font-style:italic;">// [0, 0, 0 ,0, 0]</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-普通数组作为参数创建" tabindex="-1">（2） 普通数组作为参数创建 <a class="header-anchor" href="#_2-普通数组作为参数创建" aria-hidden="true">#</a></h2><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Float32Array</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">f </span><span style="color:#676E95;font-style:italic;">// [1, 2, 3, 4, 5]</span></span>
<span class="line"></span></code></pre></div><h2 id="_3-类型数组作为参数创建" tabindex="-1">（3） 类型数组作为参数创建 <a class="header-anchor" href="#_3-类型数组作为参数创建" aria-hidden="true">#</a></h2><h2 id="二-weakmap-弱映射" tabindex="-1">二.WeakMap （弱映射） <a class="header-anchor" href="#二-weakmap-弱映射" aria-hidden="true">#</a></h2><ul><li><p>资料参考：</p></li><li><p>Set和Map相关的资料：</p></li><li><p><a href="https://gitee.com/cH3802/front_end_history/blob/master/js_2020/other/4.Set%E5%92%8CMap.md" target="_blank" rel="noreferrer">https://gitee.com/cH3802/front_end_history/blob/master/js_2020/other/4.Set和Map.md</a></p></li><li><p>WeakMap 相关资料：</p></li><li><p>Mdn: <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/WeakMap" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/WeakMap</a></p></li><li><p>51cto: <a href="https://blog.51cto.com/u_11239407/2930565" target="_blank" rel="noreferrer">https://blog.51cto.com/u_11239407/2930565</a></p></li></ul><p>在es6中我们知道Map和Set是两种新的数据结构，</p><ul><li><p>在查阅翻译WeakMap英文是弱映射，这里的弱指的是容易被清理；我们来看一下WeakMap的一些属性和方法</p></li><li><h3 id="_1-weakmap的属性和方法" tabindex="-1">1.WeakMap的属性和方法 <a class="header-anchor" href="#_1-weakmap的属性和方法" aria-hidden="true">#</a></h3></li><li><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">const weakMap =  new WeakMap() // 创建一个weakmap实例</span></span>
<span class="line"><span style="color:#A6ACCD;">weakMap.set(key, value) —— 根据键存储值。</span></span>
<span class="line"><span style="color:#A6ACCD;">weakMap.get(key) —— 根据键来返回值，如果 map 中不存在对应的 key，则返回 undefined。</span></span>
<span class="line"><span style="color:#A6ACCD;">weakMap.has(key) —— 如果 key 存在则返回 true，否则返回 false。</span></span>
<span class="line"><span style="color:#A6ACCD;">weakMap.delete(key) —— 删除指定键的值。</span></span>
<span class="line"><span style="color:#A6ACCD;">weakMap.clear() —— 清空 map。map.size —— 返回当前元素个数。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></li><li><p>注意：和Map不同WeakMap的key值必须是一个对象</p></li><li><h3 id="_2-weakmap的特性" tabindex="-1">2.WeakMap的特性 <a class="header-anchor" href="#_2-weakmap的特性" aria-hidden="true">#</a></h3></li><li><p>从上面我们可以看出WeakMap和Map的大部分属性和方法是相似的，那么它们是否有不同点，接下来我们看一下需要注意的几个地方</p></li><li><h4 id="_2-1-weakmap的key必须是对象" tabindex="-1">2.1 WeakMap的key必须是对象 <a class="header-anchor" href="#_2-1-weakmap的key必须是对象" aria-hidden="true">#</a></h4></li><li><h4 id="_2-2-weakmap是弱引用" tabindex="-1">2.2 WeakMap是弱引用 <a class="header-anchor" href="#_2-2-weakmap是弱引用" aria-hidden="true">#</a></h4></li><li><p>为什么说WeakMap是弱引用，在了解这个之前，我们需要先了解一下垃圾回收机制，在垃圾回收机制当中，对不再使用的对象，我们可以赋值null，进行标记清除；但是我们声明的这个对象，在其他对象里面引用的话，这个时候，标记清除就不生效了。</p></li><li><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* WeakMap的弱引用性 */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 我们用三个对象来验证</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 普通对象</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> m </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">可乐</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [m]</span></span>
<span class="line"><span style="color:#A6ACCD;">    m </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// console.log(array[0]) // 我们通过访问 array[0],结果发现依然能够成功打印</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// map对象</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> m2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">汽水</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> m2)</span></span>
<span class="line"><span style="color:#A6ACCD;">    m2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// console.log(map.get(&#39;name&#39;)) // 通过访问 map设置的属性name的值依然存在</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// weakMap</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> m3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">美联达</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> weakMap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">WeakMap</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    weakMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;">(m3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> m3)</span></span>
<span class="line"><span style="color:#A6ACCD;">    m3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// console.log(weakMap.get(m3)) // 打印为undefined</span></span>
<span class="line"></span></code></pre></div></li><li><h4 id="_2-3-weakmap可以保留私有数据" tabindex="-1">2.3 WeakMap可以保留私有数据 <a class="header-anchor" href="#_2-3-weakmap可以保留私有数据" aria-hidden="true">#</a></h4></li><li><p>看下面一个例子</p></li><li><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">// WeakMap可以保留私有数据</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> STACK </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">wm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">WeakMap</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">wm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> [])</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">        push</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">elem</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">wm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">elem</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">        toString</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">elem</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">wm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> stack </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">STACK</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(stack)</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"></span></code></pre></div></li><li><h3 id="_3-weakmap的一些应用" tabindex="-1">3.WeakMap的一些应用 <a class="header-anchor" href="#_3-weakmap的一些应用" aria-hidden="true">#</a></h3></li></ul><p>\\1. 保留私有数据 （见上面的2.3）</p><p>\\2. 弱应用的一些应用 （深拷贝）</p><h2 id="三-weakset" tabindex="-1">三. WeakSet <a class="header-anchor" href="#三-weakset" aria-hidden="true">#</a></h2><h3 id="_1-weakset的属性和方法" tabindex="-1">1.weakset的属性和方法 <a class="header-anchor" href="#_1-weakset的属性和方法" aria-hidden="true">#</a></h3><p><img src="https://e4ebh5yc27.feishu.cn/space/api/box/stream/download/asynccode/?code=NzQzZjZmMDczZjBiNTQ1NDU2NjljNDdjYzljNDVlNThfQTZSb3JnamNPeTFGR05rVkFxSnFGZjNEcWFSTUF6ZFZfVG9rZW46Ym94Y25CY2VEQ0xBdk9WNzJTclVMNWV0M01nXzE2NzY1NjEzNzg6MTY3NjU2NDk3OF9WNA" alt="img"></p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建一个weakset</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ws </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">WeakSet</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">// 通过上面的截图我们可以发现 weakset有 add,delete, has这三个方法</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">ws</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(obj)</span></span>
<span class="line"><span style="color:#A6ACCD;">ws</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(key)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">ws</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">delete</span><span style="color:#A6ACCD;">(key)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(ws</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#A6ACCD;">(key))</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(ws</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#A6ACCD;">(obj))</span></span>
<span class="line"></span></code></pre></div><p>weakset的其他特性：</p><p>1.weakset是不能被遍历的，它没有forEach这些方法</p><p>2.weakset在添加值得时候，只能是对象，添加其他类型会报错</p><p>3.weakset是弱引用</p><h3 id="_2-weak的弱引用" tabindex="-1">2.Weak的弱引用 <a class="header-anchor" href="#_2-weak的弱引用" aria-hidden="true">#</a></h3><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">// 和set结构不同，没有size这个属性，是因为ws同WeakMap 一样也是弱引用，在没被引用时，</span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">// 数据会被清空</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ws </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">WeakSet</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        由于ws是不能被迭代的，所以用【..ws】[0] 检验值是否存在是会报错的，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        我们可以通过has来判断值是否存在</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    */</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(ws</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#A6ACCD;">(obj)) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">    obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(ws</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#A6ACCD;">(obj)) </span><span style="color:#676E95;font-style:italic;">// false,弱引用被回收了</span></span>
<span class="line"></span></code></pre></div>`,34),e=[o];function t(c,r,y,D,A,C){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
