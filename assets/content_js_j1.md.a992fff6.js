import{_ as s,o as a,c as n,a as l}from"./app.f292d0e7.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Float32Array","slug":"float32array","link":"#float32array","children":[{"level":3,"title":"1.什么是Float32Array？","slug":"_1-什么是float32array","link":"#_1-什么是float32array","children":[]}]},{"level":2,"title":"1.1 固定长度","slug":"_1-1-固定长度","link":"#_1-1-固定长度","children":[]},{"level":2,"title":"1.2 只能存储浮点类型数据","slug":"_1-2-只能存储浮点类型数据","link":"#_1-2-只能存储浮点类型数据","children":[]},{"level":2,"title":"2.基本用法","slug":"_2-基本用法","link":"#_2-基本用法","children":[]},{"level":2,"title":"2.1创建类型数组","slug":"_2-1创建类型数组","link":"#_2-1创建类型数组","children":[]},{"level":2,"title":"（1）长度作为参数创建","slug":"_1-长度作为参数创建","link":"#_1-长度作为参数创建","children":[]},{"level":2,"title":"（2） 普通数组作为参数创建","slug":"_2-普通数组作为参数创建","link":"#_2-普通数组作为参数创建","children":[]},{"level":2,"title":"（3）  类型数组作为参数创建","slug":"_3-类型数组作为参数创建","link":"#_3-类型数组作为参数创建","children":[]}],"relativePath":"content/js/j1.md"}'),e={name:"content/js/j1.md"},p=l(`<h2 id="float32array" tabindex="-1">Float32Array <a class="header-anchor" href="#float32array" aria-hidden="true">#</a></h2><h3 id="_1-什么是float32array" tabindex="-1">1.什么是Float32Array？ <a class="header-anchor" href="#_1-什么是float32array" aria-hidden="true">#</a></h3><div class="language-Markdown"><button title="Copy Code" class="copy"></button><span class="lang">Markdown</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">在MDN中的描述是：一个固定长度，用来储存浮点类型数据的数组</span></span>
<span class="line"></span></code></pre></div><h2 id="_1-1-固定长度" tabindex="-1">1.1 固定长度 <a class="header-anchor" href="#_1-1-固定长度" aria-hidden="true">#</a></h2><p>为什么说是固定长度？请看下方示例</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Float32Array</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">f1 </span><span style="color:#676E95;font-style:italic;">// [0, 1]</span></span>
<span class="line"></span></code></pre></div><p>从上面示例可以看出，创建了一个长度为2的类型数组，然后通过索引复制3个值，最后发现只有两个元素。也就是说类型数组Float32Array和普通数组Array不一样，不能像Array一样五线2添加元素。</p><h2 id="_1-2-只能存储浮点类型数据" tabindex="-1">1.2 只能存储浮点类型数据 <a class="header-anchor" href="#_1-2-只能存储浮点类型数据" aria-hidden="true">#</a></h2><p>为什么只能存储浮点类型数据，我们通过下方示例来验证</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Float32Array</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">f</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">f[</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">f </span><span style="color:#676E95;font-style:italic;">// [0, NaN, 2]</span></span>
<span class="line"></span></code></pre></div><p>通过上方的示例我们可以看到，我们只能添加number类型的数据，其他其它类型的数据会变成NaN</p><h2 id="_2-基本用法" tabindex="-1">2.基本用法 <a class="header-anchor" href="#_2-基本用法" aria-hidden="true">#</a></h2><h2 id="_2-1创建类型数组" tabindex="-1">2.1创建类型数组 <a class="header-anchor" href="#_2-1创建类型数组" aria-hidden="true">#</a></h2><h2 id="_1-长度作为参数创建" tabindex="-1">（1）长度作为参数创建 <a class="header-anchor" href="#_1-长度作为参数创建" aria-hidden="true">#</a></h2><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Float32Array</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">f </span><span style="color:#676E95;font-style:italic;">// [0, 0, 0 ,0, 0]</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-普通数组作为参数创建" tabindex="-1">（2） 普通数组作为参数创建 <a class="header-anchor" href="#_2-普通数组作为参数创建" aria-hidden="true">#</a></h2><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Float32Array</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">f </span><span style="color:#676E95;font-style:italic;">// [1, 2, 3, 4, 5]</span></span>
<span class="line"></span></code></pre></div><h2 id="_3-类型数组作为参数创建" tabindex="-1">（3） 类型数组作为参数创建 <a class="header-anchor" href="#_3-类型数组作为参数创建" aria-hidden="true">#</a></h2>`,18),o=[p];function t(r,c,C,i,y,A){return a(),n("div",null,o)}const h=s(e,[["render",t]]);export{D as __pageData,h as default};
